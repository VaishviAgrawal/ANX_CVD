
.libPaths("___________")  # Add your R library path
library(LAVA)                     
# -------------------------
# Step 1: Parse Arguments
# -------------------------
arg <- commandArgs(T)
ref.prefix <- arg[1]                      # e.g., "g1000_eur"
loc.file <- arg[2]                        # e.g., "blocks_s2500_m25_f1_w200.locfile"
info.file <- arg[3]                       # e.g., "input.info.txt"
sample.overlap.file <- if (length(arg) >= 4 && arg[4] != "") arg[4] else NULL
#sample.overlap.file <- args[4]            # NULL if no overlap file
phenos <- unlist(strsplit(arg[5], ";")) # e.g., "ANX;HF;QT"
out.fname <- arg[6]                       # e.g., "LAVA_output_inc"

# -------------------------
# Step 2: Load Data
# -------------------------
### Read in data
loci = read.loci(loc.file); n.loc = nrow(loci)
input = process.input(info.file, sample.overlap.file, ref.prefix, phenos)

#loci <- read.loci(loc.file)
#n.loc <- nrow(loci)
#input <- process.input(
 # input.info.file = info.file,
 # sample.overlap.file = ifelse(sample.overlap.file == "", NULL, sample.overlap.file),
 # ref.prefix = ref.prefix,
 # phenos = phenos
#)

# -------------------------
# Step 3: Set Thresholds
# -------------------------
univ.p.thresh <- 0.05  #default threshold for filtering bivariate tests

# -------------------------
# Step 4: Run LAVA Analysis
# -------------------------
cat(paste("Starting LAVA analysis for", n.loc, "loci\n"))
progress <- ceiling(quantile(1:n.loc, seq(.05, 1, .05)))


u=b=list()
for (i in 1:n.loc) {
        if (i %in% progress) print(paste("..",names(progress[which(progress==i)])))     # (printing progress)
        locus = process.locus(loci[i,], input)                                          # process locus

        # It is possible that the locus cannot be defined for various reasons (e.g. too few SNPs), so the !is.null(locus) check is necessary before calling the analysis functions.
        if (!is.null(locus)) {
                # extract some general locus info for the output
                loc.info = data.frame(locus = locus$id, chr = locus$chr, start = locus$start, stop = locus$stop, n.snps = locus$n.snps, n.pcs = locus$K)

                # run the univariate and bivariate tests
                loc.out = run.univ.bivar(locus, univ.thresh = univ.p.thresh)
                u[[i]] = cbind(loc.info, loc.out$univ)
                if(!is.null(loc.out$bivar)) b[[i]] = cbind(loc.info, loc.out$bivar)
        }
}

# save the output
write.table(do.call(rbind,u), paste0(out.fname,".univ_inc_2.lava"), row.names=F,quote=F,col.names=T)
write.table(do.call(rbind,b), paste0(out.fname,".bivar_inc_2.lava"), row.names=F,quote=F,col.names=T)

print(paste0("Done! Analysis output written to ",out.fname,".*.lava"))
